{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      user: null,\n      roles: [] // Список ролей\n    };\n  },\n  async created() {\n    try {\n      const userId = this.$route.params.id;\n      const userResponse = await axios.get(`/user/${userId}/edit`);\n      this.user = userResponse.data;\n      const rolesResponse = await axios.get('/roles'); // Загрузка списка ролей\n      this.roles = rolesResponse.data;\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  },\n  methods: {\n    async updateRole() {\n      try {\n        const userId = this.$route.params.id;\n        await axios.put(`/user/${userId}`, {\n          role_id: this.user.role_id\n        });\n        alert('Роль пользователя обновлена');\n      } catch (error) {\n        console.error('Error updating user role:', error);\n        alert('Ошибка при обновлении роли пользователя');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user","roles","created","userId","$route","params","id","userResponse","get","rolesResponse","error","console","methods","updateRole","put","role_id","alert"],"sources":["d:\\Programs\\OSPanel\\domains\\back-adil\\src\\views\\UserEdit.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Редактирование пользователя</h2>\r\n    <form @submit.prevent=\"updateRole\">\r\n        <label for=\"role_id\">Role ID:</label>\r\n        <select id=\"role_id\" v-model=\"user.role_id\">\r\n          <option :value=\"1\">Пользователь</option>\r\n          <option :value=\"1\">Админ</option>\r\n        </select>\r\n      <button type=\"submit\">Сохранить изменения</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: null,\r\n      roles: [], // Список ролей\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const userId = this.$route.params.id;\r\n      const userResponse = await axios.get(`/user/${userId}/edit`);\r\n      this.user = userResponse.data;\r\n\r\n      const rolesResponse = await axios.get('/roles'); // Загрузка списка ролей\r\n      this.roles = rolesResponse.data;\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  },\r\n  methods: {\r\n    async updateRole() {\r\n      try {\r\n        const userId = this.$route.params.id;\r\n        await axios.put(`/user/${userId}`, {\r\n          role_id: this.user.role_id\r\n        });\r\n        alert('Роль пользователя обновлена');\r\n      } catch (error) {\r\n        console.error('Error updating user role:', error);\r\n        alert('Ошибка при обновлении роли пользователя');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Добавьте здесь свои стили */\r\nform {\r\n  /* Стили формы */\r\n}\r\nform div {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  /* Стили для меток */\r\n}\r\ninput, button {\r\n  /* Стили для полей ввода и кнопок */\r\n}\r\n</style>"],"mappings":"AAeA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,EAAE,CAAE;IACb,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACpC,MAAMC,YAAW,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAE,SAAQL,MAAO,OAAM,CAAC;MAC5D,IAAI,CAACH,IAAG,GAAIO,YAAY,CAACR,IAAI;MAE7B,MAAMU,aAAY,GAAI,MAAMX,KAAK,CAACU,GAAG,CAAC,QAAQ,CAAC,EAAE;MACjD,IAAI,CAACP,KAAI,GAAIQ,aAAa,CAACV,IAAI;IACjC,EAAE,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EACDE,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMV,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;QACpC,MAAMR,KAAK,CAACgB,GAAG,CAAE,SAAQX,MAAO,EAAC,EAAE;UACjCY,OAAO,EAAE,IAAI,CAACf,IAAI,CAACe;QACrB,CAAC,CAAC;QACFC,KAAK,CAAC,6BAA6B,CAAC;MACtC,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDM,KAAK,CAAC,yCAAyC,CAAC;MAClD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}