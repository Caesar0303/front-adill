{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-65aa402f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Редактирование пользователя\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"role_id\"\n}, \"Роль:\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: 1\n}, \"Пользователь\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: 2\n}, \"Админ\", -1 /* HOISTED */));\nconst _hoisted_5 = [_hoisted_3, _hoisted_4];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Сохранить изменения\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.updateRole && $options.updateRole(...args), [\"prevent\"]))\n  }, [_hoisted_2, _withDirectives(_createElementVNode(\"select\", {\n    id: \"role_id\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.role_id = $event)\n  }, [..._hoisted_5], 512 /* NEED_PATCH */), [[_vModelSelect, $data.role_id]]), _hoisted_6], 32 /* NEED_HYDRATION */), _createTextVNode(\" \" + _toDisplayString($data.user), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["_createElementVNode","for","value","_hoisted_3","_hoisted_4","type","_createElementBlock","_hoisted_1","onSubmit","_cache","_withModifiers","args","$options","updateRole","_hoisted_2","id","$data","role_id","$event","_hoisted_6","_toDisplayString","user"],"sources":["d:\\Programs\\OSPanel\\domains\\back-adil\\src\\views\\UserEdit.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Редактирование пользователя</h2>\r\n    <form @submit.prevent=\"updateRole\">\r\n        <label for=\"role_id\">Роль:</label>\r\n        <select id=\"role_id\" v-model=\"role_id\">\r\n          <option :value=\"1\">Пользователь</option>\r\n          <option :value=\"2\">Админ</option>\r\n        </select>\r\n      <button type=\"submit\">Сохранить изменения</button>\r\n    </form>\r\n    {{user}}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: null,\r\n      role_id: null, // Инициализируем role_id как null\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const userId = this.$route.params.id;\r\n      const response = await axios.get(`/user/${userId}/edit`);\r\n      this.user = response.data;\r\n      this.role_id = this.user.role_id; // Обновляем role_id после получения данных пользователя\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  },\r\n  methods: {\r\n    async updateRole() {\r\n      try {\r\n        const userId = this.$route.params.id;\r\n        await axios.put(`/user/${userId}`, {\r\n          role_id: this.role_id // Используем обновленный role_id\r\n        });\r\n        alert('Роль пользователя обновлена');\r\n      } catch (error) {\r\n        console.error('Error updating user role:', error);\r\n        alert('Ошибка при обновлении роли пользователя');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Добавьте здесь свои стили */\r\nform {\r\n  /* Стили формы */\r\n}\r\nform div {\r\n  margin-bottom: 15px;\r\n}\r\nlabel {\r\n  /* Стили для меток */\r\n}\r\ninput, button {\r\n  /* Стили для полей ввода и кнопок */\r\n}\r\n</style>"],"mappings":";;gEAEIA,mBAAA,CAAoC,YAAhC,6BAA2B;gEAE3BA,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAS,GAAC,OAAK;gEAExBD,mBAAA,CAAwC;EAA/BE,KAAK,EAAE;AAAC,GAAE,cAAY;gEAC/BF,mBAAA,CAAiC;EAAxBE,KAAK,EAAE;AAAC,GAAE,OAAK;oBADxBC,UAAwC,EACxCC,UAAiC,C;gEAErCJ,mBAAA,CAAkD;EAA1CK,IAAI,EAAC;AAAQ,GAAC,qBAAmB;;uBAR7CC,mBAAA,CAWM,cAVJC,UAAoC,EACpCP,mBAAA,CAOO;IAPAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC7BG,UAAkC,E,gBAClCd,mBAAA,CAGS;IAHDe,EAAE,EAAC,SAAS;+DAAUC,KAAA,CAAAC,OAAO,GAAAC,MAAA;8DAAPF,KAAA,CAAAC,OAAO,E,GAIvCE,UAAkD,C,6CAC7C,GACP,GAAAC,gBAAA,CAAEJ,KAAA,CAAAK,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}