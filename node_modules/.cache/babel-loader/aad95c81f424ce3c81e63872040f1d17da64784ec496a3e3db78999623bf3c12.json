{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0c208754\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"categoryName\"\n}, \"Название категории:\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Создать\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.createCategory && $options.createCategory(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    id: \"categoryName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.name = $event),\n    placeholder: \"Введите название категории\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.name]])]), _hoisted_2], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementVNode","for","type","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","createCategory","_hoisted_1","id","_ctx","name","$event","placeholder","_hoisted_2"],"sources":["d:\\Programs\\OSPanel\\domains\\back-adil\\src\\views\\CategoryCreate.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <form @submit.prevent=\"createCategory\">\r\n      <div>\r\n        <label for=\"categoryName\">Название категории:</label>\r\n        <input id=\"categoryName\" v-model=\"name\" placeholder=\"Введите название категории\" />\r\n      </div>\r\n      <button type=\"submit\">Создать</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: null,\r\n      role_id: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async createCategory() {\r\n      try {\r\n        const userId = this.$route.params.id;\r\n        const response = await axios.post(`/user/${userId}/update`, {\r\n          role_id: this.role_id\r\n        });\r\n        console.log(response);\r\n        alert('Роль пользователя обновлена');\r\n      } catch (error) {\r\n        console.error('Error updating user role:', error);\r\n        alert('Ошибка при обновлении роли пользователя');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Стилизуйте форму по вашему вкусу */\r\nform div {\r\n  margin-bottom: 10px;\r\n}\r\n</style>"],"mappings":";;gEAIQA,mBAAA,CAAqD;EAA9CC,GAAG,EAAC;AAAc,GAAC,qBAAmB;gEAG/CD,mBAAA,CAAsC;EAA9BE,IAAI,EAAC;AAAQ,GAAC,SAAO;;uBANjCC,mBAAA,CAQM,cAPJH,mBAAA,CAMO;IANAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;MACnCP,mBAAA,CAGM,cAFJU,UAAqD,E,gBACrDV,mBAAA,CAAmF;IAA5EW,EAAE,EAAC,cAAc;+DAAUC,IAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAlBH,IAAA,CAAAC,IAAI,E,KAExCG,UAAsC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}